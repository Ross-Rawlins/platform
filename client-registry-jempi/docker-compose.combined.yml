version: '3.9'

services:
  jempi-async-receiver:
    image: jembi/jempi-async-receiver:${JEMPI_ASYNC_RECEIVER_IMAGE_TAG}
    environment:
      LOG4J2_LEVEL: ${LOG4J2_LEVEL}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOSTS}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID_ASYNC}
    volumes:
      - "jempi-shared-data:/app/csv"
    deploy:
      replicas: ${JEMPI_ASYNC_RECEIVER_INSTANCES}
      resources:
        limits:
          memory: ${JEMPI_ASYNC_RECEIVER_MEMORY_LIMIT}
        reservations:
          memory: ${JEMPI_ASYNC_RECEIVER_MEMORY_RESERVE}
    networks:
      kafka:
      default:


  jempi-etl:
    image: jembi/jempi-etl:${JEMPI_ETL_IMAGE_TAG}
    environment:
      LOG4J2_LEVEL: ${LOG4J2_LEVEL}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOSTS}
      KAFKA_APPLICATION_ID: ${KAFKA_APPLICATION_ID_ETL}
    deploy:
      replicas: ${JEMPI_ETL_INSTANCES}
      resources:
        limits:
          memory: ${JEMPI_ETL_MEMORY_LIMIT}
        reservations:
          memory: ${JEMPI_ETL_MEMORY_RESERVE}
    networks:
      kafka:
      default:


  jempi-controller:
    image: jembi/jempi-controller:${JEMPI_CONTROLLER_IMAGE_TAG}
    environment:
      LOG4J2_LEVEL: ${LOG4J2_LEVEL}
      POSTGRESQL_IP: ${JEMPI_REPMGR_PRIMARY_HOST}
      POSTGRESQL_PORT: 5432
      POSTGRESQL_USER: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_NOTIFICATIONS_DB: ${POSTGRESQL_NOTIFICATIONS_DB}
      POSTGRESQL_AUDIT_DB: ${POSTGRESQL_AUDIT_DB}
      DGRAPH_HOSTS: ${DGRAPH_HOSTS}
      DGRAPH_PORTS: ${DGRAPH_PORTS}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOSTS}
      KAFKA_APPLICATION_ID: ${KAFKA_APPLICATION_ID_CTRL}
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID_CTRL}
      CONTROLLER_HTTP_PORT: 50000
      API_IP: jempi-api
      API_HTTP_PORT: 50000
      LINKER_IP: jempi-linker
      LINKER_HTTP_PORT: 50000
    deploy:
      replicas: ${JEMPI_CONTROLLER_INSTANCES}
      resources:
        limits:
          memory: ${JEMPI_CONTROLLER_MEMORY_LIMIT}
        reservations:
          memory: ${JEMPI_CONTROLLER_MEMORY_RESERVE}
    networks:
      kafka:
      default:


  jempi-linker:
    image: jembi/jempi-linker:${JEMPI_LINKER_IMAGE_TAG}
    environment:
      LOG4J2_LEVEL: ${LOG4J2_LEVEL}
      POSTGRESQL_IP: ${JEMPI_REPMGR_PRIMARY_HOST}
      POSTGRESQL_PORT: 5432
      POSTGRESQL_USER: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_NOTIFICATIONS_DB: ${POSTGRESQL_NOTIFICATIONS_DB}
      POSTGRESQL_AUDIT_DB: ${POSTGRESQL_AUDIT_DB}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOSTS}
      KAFKA_APPLICATION_ID_INTERACTIONS: ${KAFKA_APPLICATION_ID_INTERACTIONS}
      KAFKA_APPLICATION_ID_MU: ${KAFKA_APPLICATION_ID_MU}
      KAFKA_CLIENT_ID_NOTIFICATIONS: ${KAFKA_CLIENT_ID_NOTIFICATIONS}
      DGRAPH_HOSTS: ${DGRAPH_HOSTS}
      DGRAPH_PORTS: ${DGRAPH_PORTS}
      LINKER_HTTP_PORT: 50000
      API_IP: jempi-api
      API_HTTP_PORT: 50000
      LINKER_MATCH_THRESHOLD: ${LINKER_MATCH_THRESHOLD}
      LINKER_MATCH_THRESHOLD_MARGIN: ${LINKER_MATCH_THRESHOLD_MARGIN}
    deploy:
      replicas: ${JEMPI_LINKER_INSTANCES}
      resources:
        limits:
          memory: ${JEMPI_LINKER_MEMORY_LIMIT}
        reservations:
          memory: ${JEMPI_LINKER_MEMORY_RESERVE}
    networks:
      kafka:
      default:


  jempi-postgresql-01:
    image: bitnami/postgresql-repmgr:15.2.0
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_NOTIFICATIONS_DB: ${POSTGRESQL_NOTIFICATIONS_DB}
      POSTGRESQL_AUDIT_DB: ${POSTGRESQL_AUDIT_DB}
      POSTGRESQL_USERS_DB: ${POSTGRESQL_USERS_DB}
      REPMGR_PASSWORD: ${JEMPI_REPMGR_PASSWORD}
      REPMGR_PRIMARY_HOST: ${JEMPI_REPMGR_PRIMARY_HOST}
      REPMGR_PARTNER_NODES: ${JEMPI_REPMGR_PARTNER_NODES}
      REPMGR_NODE_NAME: jempi-postgresql-01
      REPMGR_NODE_NETWORK_NAME: jempi-postgresql-01
      ALLOW_EMPTY_PASSWORD: "yes"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: ${JEMPI_POSTGRES_CPU_LIMIT}
          memory: ${JEMPI_POSTGRES_MEMORY_LIMIT}
        reservations:
          cpus: ${JEMPI_POSTGRES_CPU_RESERVE}
          memory: ${JEMPI_POSTGRES_MEMORY_RESERVE}
    volumes:
      - "jempi-psql-01-data:/bitnami/postgresql"
    configs:
      - target: /docker-entrypoint-initdb.d/create-schema.sh
        source: create-schema.sh
      - target: /conf/config-audit.sql
        source: config-audit.sql
      - target: /conf/config-notifications.sql
        source: config-notifications.sql
      - target: /conf/config-users.sql
        source: config-users.sql

volumes:
  jempi-psql-01-data:
  jempi-shared-data:


networks:
  kafka:
    name: kafka_public
    external: true
  defualt:


configs:
  create-schema.sh:
    file: ./importer/create-schema.sh
    name: create-schema.sh-${create_schema_sh_DIGEST:?err}
    labels:
      name: jempi
  config-audit.sql:
    file: ./importer/config-audit.sql
    name: config-audit.sql-${config_audit_sql_DIGEST:?err}
    labels:
      name: jempi
  config-notifications.sql:
    file: ./importer/config-notifications.sql
    name: config-notifications.sql-${config_notifications_sql_DIGEST:?err}
    labels:
      name: jempi
  config-users.sql:
    file: ./importer/config-users.sql
    name: config-users.sql-${config_users_sql_DIGEST:?err}
    labels:
      name: jempi
