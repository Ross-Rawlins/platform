{
  "name": "Register Patient response",
  "endpoint": {
    "pattern": "/register-response",
    "method": "POST"
  },
  "transformation": {
    "input": "JSON",
    "output": "JSON"
  },
  "inputTransforms": {
    "currentDate": "$now()",
    "sourcePatient": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and $exists(requestBody.identifier[0].value) ? {'patient': requestBody.identifier[0].value, 'facility': requestBody.identifier[0].system} : null",
    "phn": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and  $count($filter(requestBody.identifier, function($v) {$contains($v.system, 'phn')})) > 0 ? $filter(requestBody.identifier, function($v) {$contains($v.system, 'phn')})[0].value : null",
    "nic": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and  $count($filter(requestBody.identifier, function($v) {$contains($v.system, 'nic')})) > 0 ? $filter(requestBody.identifier, function($v) {$contains($v.system, 'nic')})[0].value : null",
    "ppn": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and  $count($filter(requestBody.identifier, function($v) {$contains($v.system, 'passport')})) > 0 ? $filter(requestBody.identifier, function($v) {$contains($v.system, 'passport')})[0].value : null",
    "scn": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and  $count($filter(requestBody.identifier, function($v) {$contains($v.system, 'scn')})) > 0 ? $filter(requestBody.identifier, function($v) {$contains($v.system, 'scn')})[0].value : null",
    "dl": "$exists(requestBody.identifier) and $exists(requestBody.identifier[0]) and  $count($filter(requestBody.identifier, function($v) {$contains($v.system, 'drivers')})) > 0 ? $filter(requestBody.identifier, function($v) {$contains($v.system, 'drivers')})[0].value : null",
    "givenName": "$exists(requestBody.name) and $exists(requestBody.name[0]) and $exists(requestBody.name[0].given[0]) ? requestBody.name[0].given[0] : null",
    "middleName": "$exists(requestBody.name) and $exists(requestBody.name[0]) and $exists(requestBody.name[0].given[1]) ? requestBody.name[0].given[1] : null",
    "familyName": "$exists(requestBody.name) and $exists(requestBody.name[0]) ? requestBody.name[0].family : null",
    "prefixName": "$exists(requestBody.name) and $exists(requestBody.name[0]) and $exists(requestBody.name[0].prefix[0]) ? requestBody.name[0].prefix[0] : null",
    "addressType": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].type : null",
    "addressNumber": "$exists(requestBody.address) and $exists(requestBody.address[0]) and $exists(requestBody.address[0].line[0]) ? requestBody.address[0].line[0] : null",
    "addressStreet": "$exists(requestBody.address) and $exists(requestBody.address[0]) and $exists(requestBody.address[0].line[1]) ? requestBody.address[0].line[1] : null",
    "addressCity": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].city : null",
    "addressDistrict": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].district : null",
    "addressState": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].state : null",
    "addressPostalCode": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].postalCode : null",
    "addressCountry": "$exists(requestBody.address) and $exists(requestBody.address[0]) ? requestBody.address[0].country : null",
    "phoneNumber": "$exists(requestBody.telecom) and $exists(requestBody.telecom[0]) ? requestBody.telecom[0].value : null",
    "emailAddress": "$exists(requestBody.telecom) and $exists(requestBody.telecom[1]) ? requestBody.telecom[1].value : null"
  },
  "inputMapping": {
    "transforms.sourcePatient": "sourceId",
    "transforms.phn": "demographicData.phn",
    "transforms.nic": "demographicData.nic",
    "transforms.ppn": "demographicData.ppn",
    "transforms.scn": "demographicData.scn",
    "transforms.dl": "demographicData.dl",
    "transforms.familyName": "demographicData.familyName",
    "transforms.middleName": "demographicData.middleName",
    "transforms.givenName": "demographicData.givenName",
    "transforms.prefixName": "demographicData.prefixName",
    "requestBody.gender": "demographicData.gender",
    "requestBody.birthDate": "demographicData.dob",
    "transforms.addressType": "demographicData.addressType",
    "transforms.addressNumber": "demographicData.addressNumber",
    "transforms.addressStreet": "demographicData.addressStreet",
    "transforms.addressCity": "demographicData.addressCity",
    "transforms.addressDistrict": "demographicData.addressDistrict",
    "transforms.addressState": "demographicData.addressState",
    "transforms.addressPostalCode": "demographicData.addressPostalCode",
    "transforms.addressCountry": "demographicData.addressCountry",
    "transforms.phoneNumber": "demographicData.phoneNumber",
    "transforms.emailAddress": "demographicData.emailAddress",
    "transforms.currentDate": "uniqueInteractionData.auxDateCreated"
  },
  "requests": {
    "response": {
      "id": "jempi",
      "primary": true,
      "config": {
        "method": "post",
        "headers": {
          "contentType": "application/fhir+json"
        },
        "url": "http://jempi-api:50000/JeMPI/link-interaction"
      }
    }
  }
}
